[1mdiff --git a/Command.cs b/Command.cs[m
[1mindex 80e0139..f4f814f 100644[m
[1m--- a/Command.cs[m
[1m+++ b/Command.cs[m
[36m@@ -6,6 +6,7 @@[m [musing Autodesk.AutoCAD.Runtime;[m
 using Autodesk.AutoCAD.Windows;[m
 using Autodesk.Windows;[m
 using BoundingRectangle;[m
[32m+[m[32musing Markdig;[m
 using Newtonsoft.Json;[m
 using System;[m
 using System.Collections.Generic;[m
[36m@@ -595,7 +596,18 @@[m [mnamespace CoDesignStudy.Cad.PlugIn[m
                     double y = point[1];[m
                     double z = 0;[m
                     insertPoints.Add(new Point3d(x, y, z));[m
[31m-                    InsertBlockFromDwg(new Point3d(x, y, z), LightLayer, "gen_light");[m
[32m+[m
[32m+[m[32m                    string lightName;[m
[32m+[m[32m                    if (lightType.Contains("吸顶"))[m
[32m+[m[32m                        lightName = "感应式吸顶灯";[m
[32m+[m[32m                    else if (lightType.Contains("防爆"))[m
[32m+[m[32m                        lightName = "防爆灯";[m
[32m+[m[32m                    else if (lightType.Contains("面板"))[m
[32m+[m[32m                        lightName = "双管荧光灯";[m
[32m+[m[32m                    else[m
[32m+[m[32m                        lightName = "gen_light";[m
[32m+[m
[32m+[m[32m                    InsertBlockFromDwg(new Point3d(x, y, z), LightLayer, lightName);[m
                 }[m
             }[m
             // 插入插座[m
[36m@@ -985,6 +997,16 @@[m [mnamespace CoDesignStudy.Cad.PlugIn[m
             var aiContentControl = await dlg.AppendMessageAsync("AI", "", true, setter => updateFunc = setter);[m
             await dlg.GetAIResponse(prompt, updateFunc);[m
         }[m
[32m+[m[32m        [CommandMethod("MM", CommandFlags.Session)][m
[32m+[m[32m        public void TestMarkdig()[m
[32m+[m[32m        {[m
[32m+[m[32m            Document doc = CADApplication.DocumentManager.MdiActiveDocument;[m
[32m+[m[32m            Editor ed = doc.Editor;[m
[32m+[m[32m            Database db = doc.Database;[m
[32m+[m[32m            var pipeline = new MarkdownPipelineBuilder().UseAdvancedExtensions().Build();[m
[32m+[m[32m            var result = Markdown.ToHtml("| 灯具类型 | 个数 | 瓦数 | \r\n|---------|-----|-----|\r\n | 吸顶灯 | 2 | 20W | | 防爆灯 | 3 | 50W | | 荧光灯 | 5 | 60W |", pipeline);[m
[32m+[m[32m            ed.WriteMessage($"{result}");   // prints: <p>This is a text with some <em>emphasis</em></p>[m
[32m+[m[32m        }[m
         #endregion[m
     }[m
     }[m
[1mdiff --git a/PaletteSetDlg.cs b/PaletteSetDlg.cs[m
[1mindex 4cedf7a..1369bf1 100644[m
[1m--- a/PaletteSetDlg.cs[m
[1m+++ b/PaletteSetDlg.cs[m
[36m@@ -25,6 +25,14 @@[m [mnamespace CoDesignStudy.Cad.PlugIn[m
         private Panel conversationPanel;[m
         private TextBox inputTextBox;[m
         private Button sendButton;[m
[32m+[m[32m        private static readonly int fontsize = 14;[m
[32m+[m[32m        private static readonly string htmlsize = $"{fontsize}pt";[m
[32m+[m
[32m+[m[32m        // 自动滚动相关变量[m
[32m+[m[32m        private bool isAutoScrollEnabled = true;[m
[32m+[m[32m        private int scrollThreshold = 50; // 距离底部50px内认为在底部[m
[32m+[m[32m        private DateTime lastUserScrollTime = DateTime.MinValue;[m
[32m+[m[32m        private Control currentAIControl = null; // 当前正在更新的AI控件[m
 [m
         public PaletteSetDlg()[m
         {[m
[36m@@ -45,6 +53,8 @@[m [mnamespace CoDesignStudy.Cad.PlugIn[m
                 FlowDirection = System.Windows.Forms.FlowDirection.TopDown,[m
                 WrapContents = false[m
             };[m
[32m+[m[32m            conversationPanel.Scroll += ConversationPanel_Scroll;[m
[32m+[m[32m            conversationPanel.MouseWheel += ConversationPanel_MouseWheel;[m
             conversationPanel.Resize += ConversationPanel_Resize;[m
 [m
             // 输入区域[m
[36m@@ -76,6 +86,111 @@[m [mnamespace CoDesignStudy.Cad.PlugIn[m
             this.Controls.Add(conversationPanel);[m
             this.Controls.Add(inputPanel);[m
         }[m
[32m+[m[32m        #region 滚动检测和控制[m
[32m+[m
[32m+[m[32m        /// <summary>[m
[32m+[m[32m        /// 检测是否接近底部[m
[32m+[m[32m        /// </summary>[m
[32m+[m[32m        private bool IsNearBottom()[m
[32m+[m[32m        {[m
[32m+[m[32m            if (conversationPanel.Controls.Count == 0) return true;[m
[32m+[m
[32m+[m[32m            var verticalScroll = conversationPanel.VerticalScroll;[m
[32m+[m[32m            int currentScrollPosition = verticalScroll.Value;[m
[32m+[m[32m            int maxScrollPosition = verticalScroll.Maximum - conversationPanel.Height;[m
[32m+[m
[32m+[m[32m            return (maxScrollPosition - currentScrollPosition) <= scrollThreshold;[m
[32m+[m[32m        }[m
[32m+[m[32m        /// <summary>[m
[32m+[m[32m        /// 滚动事件处理[m
[32m+[m[32m        /// </summary>[m
[32m+[m[32m        private void ConversationPanel_Scroll(object sender, ScrollEventArgs e)[m
[32m+[m[32m        {[m
[32m+[m[32m            // 记录用户手动滚动的时间[m
[32m+[m[32m            if (e.Type == ScrollEventType.ThumbTrack || e.Type == ScrollEventType.ThumbPosition)[m
[32m+[m[32m            {[m
[32m+[m[32m                lastUserScrollTime = DateTime.Now;[m
[32m+[m
[32m+[m[32m                // 如果用户滚动到底部，重新启用自动滚动[m
[32m+[m[32m                if (IsNearBottom())[m
[32m+[m[32m                {[m
[32m+[m[32m                    isAutoScrollEnabled = true;[m
[32m+[m[32m                }[m
[32m+[m[32m                else[m
[32m+[m[32m                {[m
[32m+[m[32m                    // 如果用户向上滚动，暂时禁用自动滚动[m
[32m+[m[32m                    isAutoScrollEnabled = false;[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        /// <summary>[m
[32m+[m[32m        /// 鼠标滚轮事件处理[m
[32m+[m[32m        /// </summary>[m
[32m+[m[32m        private void ConversationPanel_MouseWheel(object sender, MouseEventArgs e)[m
[32m+[m[32m        {[m
[32m+[m[32m            lastUserScrollTime = DateTime.Now;[m
[32m+[m
[32m+[m[32m            // 检查滚动方向和位置[m
[32m+[m[32m            if (e.Delta < 0) // 向下滚动[m
[32m+[m[32m            {[m
[32m+[m[32m                if (IsNearBottom())[m
[32m+[m[32m                {[m
[32m+[m[32m                    isAutoScrollEnabled = true;[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            else // 向上滚动[m
[32m+[m[32m            {[m
[32m+[m[32m                isAutoScrollEnabled = false;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        /// <summary>[m
[32m+[m[32m        /// 智能自动滚动[m
[32m+[m[32m        /// </summary>[m
[32m+[m[32m        private void SmartAutoScroll(Control targetControl = null)[m
[32m+[m[32m        {[m
[32m+[m[32m            if (!isAutoScrollEnabled) return;[m
[32m+[m
[32m+[m[32m            // 如果用户刚刚手动滚动（1秒内），则不自动滚动[m
[32m+[m[32m            if ((DateTime.Now - lastUserScrollTime).TotalMilliseconds < 1000)[m
[32m+[m[32m            {[m
[32m+[m[32m                return;[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            try[m
[32m+[m[32m            {[m
[32m+[m[32m                if (targetControl != null)[m
[32m+[m[32m                {[m
[32m+[m[32m                    // 滚动到指定控件[m
[32m+[m[32m                    conversationPanel.ScrollControlIntoView(targetControl);[m
[32m+[m[32m                }[m
[32m+[m[32m                else[m
[32m+[m[32m                {[m
[32m+[m[32m                    // 滚动到底部[m
[32m+[m[32m                    if (conversationPanel.Controls.Count > 0)[m
[32m+[m[32m                    {[m
[32m+[m[32m                        var lastControl = conversationPanel.Controls[conversationPanel.Controls.Count - 1];[m
[32m+[m[32m                        conversationPanel.ScrollControlIntoView(lastControl);[m
[32m+[m[32m                    }[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            catch (Exception ex)[m
[32m+[m[32m            {[m
[32m+[m[32m                System.Diagnostics.Debug.WriteLine($"Auto scroll error: {ex.Message}");[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        /// <summary>[m
[32m+[m[32m        /// 强制滚动到底部（新消息时使用）[m
[32m+[m[32m        /// </summary>[m
[32m+[m[32m        private void ScrollToBottom()[m
[32m+[m[32m        {[m
[32m+[m[32m            isAutoScrollEnabled = true;[m
[32m+[m[32m            SmartAutoScroll();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        #endregion[m
[32m+[m
[32m+[m[32m        #region 消息处理[m
         public async Task<string> SendAsync(string message)[m
         {[m
             if (string.IsNullOrWhiteSpace(message)) return null;[m
[36m@@ -90,7 +205,6 @@[m [mnamespace CoDesignStudy.Cad.PlugIn[m
                 Action<string> updateFunc = null;[m
                 var aiContentControl = await AppendMessageAsync("AI", "", true, setter => updateFunc = setter);[m
                 fullAIResponse = await GetAIResponse(message, updateFunc);[m
[31m-                System.IO.File.AppendAllText("C:\\ai_debug_log.txt", $"[SendAsync DONE] {fullAIResponse}\n");[m
             }[m
             catch (Exception ex)[m
             {[m
[36m@@ -112,6 +226,7 @@[m [mnamespace CoDesignStudy.Cad.PlugIn[m
             inputTextBox.Clear();[m
 [m
             await AppendMessageAsync("用户", userMessage);[m
[32m+[m[32m            ScrollToBottom();[m
 [m
             sendButton.Enabled = false;[m
 [m
[36m@@ -120,18 +235,20 @@[m [mnamespace CoDesignStudy.Cad.PlugIn[m
                 Action<string> updateFunc = null;[m
                 // 等待 AI 控件初始化并获得更新函数[m
                 var aiContentControl = await AppendMessageAsync("AI", "", true, setter => updateFunc = setter);[m
[32m+[m[32m                // 设置当前AI控件[m
[32m+[m[32m                currentAIControl = aiContentControl;[m
                 await GetAIResponse(userMessage, updateFunc);[m
             }[m
             finally[m
             {[m
                 sendButton.Enabled = true;[m
[32m+[m[32m                currentAIControl = null;[m
             }[m
         }[m
         // 流式输出[m
         public async Task<Control> AppendMessageAsync(string sender, string message, bool isStreaming = false, Action<Action<string>> setUpdateContent = null)[m
         {[m
             if (string.IsNullOrWhiteSpace(message) && !isStreaming) return null;[m
[31m-[m
             Control contentControl;[m
 [m
             if (sender == "AI")[m
[36m@@ -140,77 +257,351 @@[m [mnamespace CoDesignStudy.Cad.PlugIn[m
                 {[m
                     Width = conversationPanel.Width - 150,[m
                     Margin = new Padding(0),[m
[31m-                    Height = 1,[m
[31m-                    DefaultBackgroundColor = Color.White[m
[32m+[m[32m                    Height = 50,[m
[32m+[m[32m                    DefaultBackgroundColor = Color.White  // AI回复的气泡颜色[m
                 };[m
 [m
                 await webView.EnsureCoreWebView2Async();[m
[31m-[m
                 if (webView.CoreWebView2 != null)[m
                 {[m
[32m+[m[32m                    // 添加节流变量[m
[32m+[m[32m                    DateTime lastScrollTime = DateTime.MinValue;[m
[32m+[m[32m                    int lastHeight = 0;[m
[32m+[m
                     webView.CoreWebView2.WebMessageReceived += (s, a) =>[m
                     {[m
                         if (int.TryParse(a.WebMessageAsJson, out int height))[m
                         {[m
[31m-                            Action update = () =>[m
[32m+[m[32m                            // 只有高度变化显著时才更新[m
[32m+[m[32m                            if (Math.Abs(height - lastHeight) > 10)[m
                             {[m
[31m-                                webView.Height = Math.Max(height, 1);[m
[31m-                                // ⭐ 关键：更新高度后再滚动[m
[31m-                                conversationPanel.ScrollControlIntoView(webView);[m
[31m-                            };[m
[31m-[m
[31m-                            if (webView.InvokeRequired)[m
[31m-                                webView.Invoke(update);[m
[31m-                            else[m
[31m-                                update();[m
[32m+[m[32m                                lastHeight = height;[m
[32m+[m[32m                                Action update = () =>[m
[32m+[m[32m                                {[m
[32m+[m[32m                                    webView.Height = Math.Max(height, 50);[m
[32m+[m
[32m+[m[32m                                    // 节流滚动：限制滚动频率[m
[32m+[m[32m                                    var now = DateTime.Now;[m
[32m+[m[32m                                    if ((now - lastScrollTime).TotalMilliseconds > 150) // 150ms节流[m
[32m+[m[32m                                    {[m
[32m+[m[32m                                        lastScrollTime = now;[m
[32m+[m
[32m+[m[32m                                        // 延迟滚动，让界面有时间更新[m
[32m+[m[32m                                        Task.Delay(30).ContinueWith(_ =>[m
[32m+[m[32m                                        {[m
[32m+[m[32m                                            if (webView.IsHandleCreated && !webView.IsDisposed)[m
[32m+[m[32m                                            {[m
[32m+[m[32m                                                webView.Invoke(new Action(() =>[m
[32m+[m[32m                                                {[m
[32m+[m[32m                                                    // 只有当前WebView是正在更新的AI控件时才滚动[m
[32m+[m[32m                                                    if (currentAIControl == webView)[m
[32m+[m[32m                                                    {[m
[32m+[m[32m                                                        SmartAutoScroll(webView);[m
[32m+[m[32m                                                    }[m
[32m+[m[32m                                                }));[m
[32m+[m[32m                                            }[m
[32m+[m[32m                                        });[m
[32m+[m[32m                                    }[m
[32m+[m[32m                                };[m
[32m+[m
[32m+[m[32m                                if (webView.InvokeRequired)[m
[32m+[m[32m                                    webView.Invoke(update);[m
[32m+[m[32m                                else[m
[32m+[m[32m                                    update();[m
[32m+[m[32m                            }[m
                         }[m
                     };[m
 [m
[31m-                    string html = Markdig.Markdown.ToHtml(message ?? "");[m
[31m-                    string doc = $"<html><head><script>window.MathJax={{tex:{{inlineMath:[['$','$'],['\\\\(','\\\\)']],displayMath:[['$$','$$'],['\\\\[','\\\\]']]}},svg:{{fontCache:'global'}}}};</script><script src='https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js'></script></head><body id='body' style='font-family:微软雅黑;font-size:10pt;background-color:#FFFFFF;margin:0;padding:0;'>{html}<script>function setContent(html){{const body=document.getElementById('body');body.innerHTML=html;if(window.MathJax){{MathJax.typesetPromise([body]).then(()=>{{setTimeout(()=>{{const height=Math.max(body.scrollHeight,document.documentElement.scrollHeight);window.chrome.webview.postMessage(height);}},100);}});}}else{{setTimeout(()=>{{const height=Math.max(body.scrollHeight,document.documentElement.scrollHeight);window.chrome.webview.postMessage(height);}},100);}}const resizeObserver=new ResizeObserver(()=>{{const newHeight=Math.max(body.scrollHeight,document.documentElement.scrollHeight);window.chrome.webview.postMessage(newHeight);}});resizeObserver.observe(body);}}if(window.MathJax)MathJax.typesetPromise();const initialHeight=Math.max(document.body.scrollHeight,document.documentElement.scrollHeight);window.chrome.webview.postMessage(initialHeight);</script></body></html>";[m
[32m+[m[32m                    // 优化HTML结构，减少重排[m
[32m+[m[32m                    var pipeline = new MarkdownPipelineBuilder()[m
[32m+[m[32m                                        .UseAdvancedExtensions()  // ✅ 启用 GFM 表格等支持[m
[32m+[m[32m                                        .Build();[m
[32m+[m
[32m+[m[32m                    string html = Markdown.ToHtml(message ?? "", pipeline);[m
[32m+[m[32m                    string doc = $@"[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m[32m    <script>[m
[32m+[m[32m        window.MathJax = {{[m
[32m+[m[32m            tex: {{[m
[32m+[m[32m                inlineMath: [['$','$'], ['\\(','\\)']],[m
[32m+[m[32m                displayMath: [['$$','$$'], ['\\[','\\]']][m
[32m+[m[32m            }},[m
[32m+[m[32m            svg: {{[m
[32m+[m[32m                fontCache: 'global'[m
[32m+[m[32m            }}[m
[32m+[m[32m        }};[m
[32m+[m[32m    </script>[m
[32m+[m[32m    <script src='https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js'></script>[m
[32m+[m[32m    <style>[m
[32m+[m[32m        html, body {{[m
[32m+[m[32m            margin: 0;[m
[32m+[m[32m            padding: 0;[m
[32m+[m[32m            font-family: 微软雅黑;[m
[32m+[m[32m            font-size: 14px;[m
[32m+[m[32m            background-color: #FFFFFF;[m
[32m+[m[32m            line-height: 1.6;[m
[32m+[m[32m            word-wrap: break-word;[m
[32m+[m[32m            /* ✅ 关键：禁用滚动条 */[m
[32m+[m[32m            overflow: hidden !important;[m
[32m+[m[32m            overflow-x: hidden !important;[m
[32m+[m[32m            overflow-y: hidden !important;[m
[32m+[m[32m        }}[m
[32m+[m[32m        .content {{[m
[32m+[m[32m            padding: 8px;[m
[32m+[m[32m            min-height: 40px; /* ✅ 设置最小高度 */[m
[32m+[m[32m            /* ✅ 确保内容不会溢出 */[m
[32m+[m[32m            overflow: hidden;[m
[32m+[m[32m            word-break: break-word;[m
[32m+[m[32m        }}[m
[32m+[m[32m        /* ✅ 新增：表格样式 - 关键修复 */[m
[32m+[m[32m        table {{[m
[32m+[m[32m            border-collapse: collapse;[m
[32m+[m[32m            width: 100%;[m
[32m+[m[32m            max-width: 100%;[m
[32m+[m[32m            margin: 10px 0;[m
[32m+[m[32m            background-color: #fff;[m
[32m+[m[32m            /* ✅ 防止表格溢出 */[m
[32m+[m[32m            table-layout: fixed;[m
[32m+[m[32m            word-wrap: break-word;[m
[32m+[m[32m        }}[m
[32m+[m[41m        [m
[32m+[m[32m        th, td {{[m
[32m+[m[32m            border: 1px solid #ddd;[m
[32m+[m[32m            padding: 8px 12px;[m
[32m+[m[32m            text-align: left;[m
[32m+[m[32m            vertical-align: top;[m
[32m+[m[32m            /* ✅ 确保单元格内容不溢出 */[m
[32m+[m[32m            overflow: hidden;[m
[32m+[m[32m            word-break: break-word;[m
[32m+[m[32m            hyphens: auto;[m
[32m+[m[32m        }}[m
[32m+[m[41m        [m
[32m+[m[32m        th {{[m
[32m+[m[32m            background-color: #f2f2f2;[m
[32m+[m[32m            font-weight: bold;[m
[32m+[m[32m        }}[m
[32m+[m[41m        [m
[32m+[m[32m        /* ✅ 响应式表格 */[m
[32m+[m[32m        @media screen and (max-width: 600px) {{[m
[32m+[m[32m            table {{[m
[32m+[m[32m                font-size: 12px;[m
[32m+[m[32m            }}[m
[32m+[m[32m            th, td {{[m
[32m+[m[32m                padding: 6px 8px;[m
[32m+[m[32m            }}[m
[32m+[m[32m        }}[m
[32m+[m[41m        [m
[32m+[m[32m        /* ✅ 处理长内容 */[m
[32m+[m[32m        .content table {{[m
[32m+[m[32m            overflow-wrap: break-word;[m
[32m+[m[32m            word-wrap: break-word;[m
[32m+[m[32m        }}[m
[32m+[m[32m        /* ✅ 隐藏所有可能的滚动条 */[m
[32m+[m[32m        ::-webkit-scrollbar {{[m
[32m+[m[32m            display: none !important;[m
[32m+[m[32m            width: 0 !important;[m
[32m+[m[32m            height: 0 !important;[m
[32m+[m[32m        }}[m
[32m+[m[32m        * {{[m
[32m+[m[32m            scrollbar-width: none !important;[m
[32m+[m[32m            -ms-overflow-style: none !important;[m
[32m+[m[32m        }}[m
[32m+[m[32m    </style>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m[32m    <div id='content' class='content'>{html}</div>[m
[32m+[m[32m    <script>[m
[32m+[m[32m        let updateTimer = null;[m
[32m+[m[32m        let isUpdating = false;[m
[32m+[m[32m        let lastReportedHeight = 0;[m
[32m+[m[41m        [m
[32m+[m[32m        function debounceHeightUpdate() {{[m
[32m+[m[32m            if (updateTimer) {{[m
[32m+[m[32m                clearTimeout(updateTimer);[m
[32m+[m[32m            }}[m
[32m+[m[32m            updateTimer = setTimeout(() => {{[m
[32m+[m[32m                const content = document.getElementById('content');[m
[32m+[m[41m                [m
[32m+[m[32m                // ✅ 更准确的高度计算[m
[32m+[m[32m                const height = Math.max([m
[32m+[m[32m                    content.scrollHeight + 16, // padding[m
[32m+[m[32m                    content.offsetHeight + 16,[m
[32m+[m[32m                    document.documentElement.scrollHeight,[m
[32m+[m[32m                    document.body.scrollHeight,[m
[32m+[m[32m                    50 // 最小高度[m
[32m+[m[32m                );[m
[32m+[m[41m                [m
[32m+[m[32m                // ✅ 避免频繁发送相同高度[m
[32m+[m[32m                if (Math.abs(height - lastReportedHeight) > 3) {{[m
[32m+[m[32m                    lastReportedHeight = height;[m
[32m+[m[32m                    window.chrome.webview.postMessage(height);[m
[32m+[m[32m                }}[m
[32m+[m[32m            }}, 30); // 减少防抖时间，更快响应[m
[32m+[m[32m        }}[m
[32m+[m[41m        [m
[32m+[m[32m        function setContent(html) {{[m
[32m+[m[32m            if (isUpdating) return;[m
[32m+[m[32m            isUpdating = true;[m
[32m+[m[41m            [m
[32m+[m[32m            const content = document.getElementById('content');[m
[32m+[m[41m            [m
[32m+[m[32m            // ✅ 使用更高效的DOM更新方式[m
[32m+[m[32m            requestAnimationFrame(() => {{[m
[32m+[m[32m                try {{[m
[32m+[m[32m                    content.innerHTML = html;[m
[32m+[m[41m                    [m
[32m+[m[32m                    // ✅ 立即计算并报告高度，避免滚动条闪现[m
[32m+[m[32m                    const immediateHeight = Math.max([m
[32m+[m[32m                        content.scrollHeight + 16,[m
[32m+[m[32m                        content.offsetHeight + 16,[m
[32m+[m[32m                        50[m
[32m+[m[32m                    );[m
[32m+[m[41m                    [m
[32m+[m[32m                    if (Math.abs(immediateHeight - lastReportedHeight) > 3) {{[m
[32m+[m[32m                        lastReportedHeight = immediateHeight;[m
[32m+[m[32m                        window.chrome.webview.postMessage(immediateHeight);[m
[32m+[m[32m                    }}[m
[32m+[m[41m                    [m
[32m+[m[32m                    if (window.MathJax) {{[m
[32m+[m[32m                        MathJax.typesetPromise([content]).then(() => {{[m
[32m+[m[32m                            debounceHeightUpdate();[m
[32m+[m[32m                            isUpdating = false;[m
[32m+[m[32m                        }}).catch(() => {{[m
[32m+[m[32m                            debounceHeightUpdate();[m
[32m+[m[32m                            isUpdating = false;[m
[32m+[m[32m                        }});[m
[32m+[m[32m                    }} else {{[m
[32m+[m[32m                        debounceHeightUpdate();[m
[32m+[m[32m                        isUpdating = false;[m
[32m+[m[32m                    }}[m
[32m+[m[32m                }} catch (e) {{[m
[32m+[m[32m                    console.error('Content update error:', e);[m
[32m+[m[32m                    isUpdating = false;[m
[32m+[m[32m                }}[m
[32m+[m[32m            }});[m
[32m+[m[32m        }}[m
[32m+[m[41m        [m
[32m+[m[32m        // 初始化[m
[32m+[m[32m        document.addEventListener('DOMContentLoaded', function() {{[m
[32m+[m[32m            if (window.MathJax) {{[m
[32m+[m[32m                MathJax.typesetPromise().then(() => {{[m
[32m+[m[32m                    debounceHeightUpdate();[m
[32m+[m[32m                }});[m
[32m+[m[32m            }} else {{[m
[32m+[m[32m                debounceHeightUpdate();[m
[32m+[m[32m            }}[m
[32m+[m[32m        }});[m
[32m+[m[41m        [m
[32m+[m[32m        // ✅ 优化的观察器，减少触发频率[m
[32m+[m[32m        const observer = new MutationObserver((mutations) => {{[m
[32m+[m[32m            let shouldUpdate = false;[m
[32m+[m[32m            mutations.forEach(mutation => {{[m
[32m+[m[32m                if (mutation.type === 'childList' ||[m[41m [m
[32m+[m[32m                    (mutation.type === 'characterData' && mutation.target.textContent.length > 0)) {{[m
[32m+[m[32m                    shouldUpdate = true;[m
[32m+[m[32m                }}[m
[32m+[m[32m            }});[m
[32m+[m[41m            [m
[32m+[m[32m            if (shouldUpdate) {{[m
[32m+[m[32m                debounceHeightUpdate();[m
[32m+[m[32m            }}[m
[32m+[m[32m        }});[m
[32m+[m[41m        [m
[32m+[m[32m        observer.observe(document.getElementById('content'), {{[m
[32m+[m[32m            childList: true,[m
[32m+[m[32m            subtree: true,[m
[32m+[m[32m            characterData: true[m
[32m+[m[32m        }});[m
[32m+[m[41m        [m
[32m+[m[32m        // ✅ 页面加载完成后立即报告高度[m
[32m+[m[32m        window.addEventListener('load', function() {{[m
[32m+[m[32m            debounceHeightUpdate();[m
[32m+[m[32m        }});[m
[32m+[m[32m    </script>[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>";[m
[32m+[m
                     webView.CoreWebView2.NavigateToString(doc);[m
 [m
                     if (setUpdateContent != null)[m
                     {[m
[32m+[m[32m                        // 添加更新节流[m
[32m+[m[32m                        DateTime lastUpdateTime = DateTime.MinValue;[m
[32m+[m[32m                        string lastContent = "";[m
[32m+[m
                         Action<string> updateContent = (newContent) =>[m
                         {[m
[31m-                            string htmlUpdate = Markdig.Markdown.ToHtml(newContent).Replace("`", "\\`");[m
[32m+[m[32m                            // 内容去重[m
[32m+[m[32m                            if (newContent == lastContent) return;[m
[32m+[m[32m                            lastContent = newContent;[m
 [m
[31m-                            if (webView.InvokeRequired)[m
[32m+[m[32m                            // 更新频率控制[m
[32m+[m[32m                            var now = DateTime.Now;[m
[32m+[m[32m                            if ((now - lastUpdateTime).TotalMilliseconds < 100) // 100ms内不重复更新[m
                             {[m
[31m-                                webView.Invoke(new Action(() =>[m
[32m+[m[32m                                return;[m
[32m+[m[32m                            }[m
[32m+[m[32m                            lastUpdateTime = now;[m
[32m+[m
[32m+[m[32m                            try[m
[32m+[m[32m                            {[m
[32m+[m[32m                                string htmlUpdate = Markdig.Markdown.ToHtml(newContent)[m
[32m+[m[32m                                    .Replace("`", "\\`")[m
[32m+[m[32m                                    .Replace("\\", "\\\\")[m
[32m+[m[32m                                    .Replace("'", "\\'")[m
[32m+[m[32m                                    .Replace("\r\n", "\\n")[m
[32m+[m[32m                                    .Replace("\n", "\\n");[m
[32m+[m
[32m+[m[32m                                if (webView.IsHandleCreated && !webView.IsDisposed)[m
                                 {[m
[31m-                                    webView.CoreWebView2.ExecuteScriptAsync($"setContent(`{htmlUpdate}`);");[m
[31m-                                    conversationPanel.ScrollControlIntoView(webView);[m
[31m-                                    // ❌ 不在这里滚动[m
[31m-                                }));[m
[32m+[m[32m                                    if (webView.InvokeRequired)[m
[32m+[m[32m                                    {[m
[32m+[m[32m                                        webView.Invoke(new Action(() =>[m
[32m+[m[32m                                        {[m
[32m+[m[32m                                            webView.CoreWebView2?.ExecuteScriptAsync($"setContent(`{htmlUpdate}`);");[m
[32m+[m[32m                                        }));[m
[32m+[m[32m                                    }[m
[32m+[m[32m                                    else[m
[32m+[m[32m                                    {[m
[32m+[m[32m                                        webView.CoreWebView2?.ExecuteScriptAsync($"setContent(`{htmlUpdate}`);");[m
[32m+[m[32m                                    }[m
[32m+[m[32m                                }[m
                             }[m
[31m-                            else[m
[32m+[m[32m                            catch (Exception ex)[m
                             {[m
[31m-                                webView.CoreWebView2.ExecuteScriptAsync($"setContent(`{htmlUpdate}`);");[m
[31m-                                conversationPanel.ScrollControlIntoView(webView);[m
[31m-                                // ❌ 不在这里滚动[m
[32m+[m[32m                                // 记录错误但不中断流程[m
[32m+[m[32m                                System.Diagnostics.Debug.WriteLine($"WebView update error: {ex.Message}");[m
                             }[m
                         };[m
 [m
                         setUpdateContent(updateContent);[m
                     }[m
                 }[m
[31m-[m
[32m+[m[32m                conversationPanel.Controls.Add(webView);[m
                 contentControl = webView;[m
             }[m
             else[m
             {[m
[31m-                contentControl = new Label[m
[32m+[m[32m                contentControl = new TextBox[m
                 {[m
                     Text = message,[m
[31m-                    AutoSize = true,[m
[31m-                    Font = new System.Drawing.Font("微软雅黑", 10),[m
[32m+[m[32m                    Font = new System.Drawing.Font("微软雅黑", fontsize),[m
                     MaximumSize = new Size(conversationPanel.Width - 150, 0),[m
                     Padding = new Padding(10),[m
                     BackColor = Color.LightBlue,[m
[31m-                    Margin = new Padding(5)[m
[32m+[m[32m                    Margin = new Padding(5),[m
[32m+[m[32m                    BorderStyle = BorderStyle.None, // 看起来像Label[m
[32m+[m[32m                    ReadOnly = true,                // 只读[m
[32m+[m[32m                    Multiline = true,              // 支持多行[m
[32m+[m[32m                    ScrollBars = ScrollBars.None,  // 不显示滚动条[m
[32m+[m[32m                    TabStop = false,               // 不参与Tab导航[m
[32m+[m[32m                    Cursor = Cursors.IBeam         // 文本光标[m
                 };[m
[32m+[m[32m                Size textSize = TextRenderer.MeasureText(message, contentControl.Font, contentControl.MaximumSize, TextFormatFlags.WordBreak);[m
[32m+[m[32m                contentControl.Height = textSize.Height + 10; // +10 是额外填充防止被裁切[m
[32m+[m[32m                contentControl.Width = Math.Min(textSize.Width + contentControl.Padding.Horizontal, conversationPanel.Width - 150);[m
[32m+[m[32m                contentControl.Height = textSize.Height + contentControl.Padding.Vertical;[m
             }[m
 [m
             // 头像[m
[36m@@ -266,6 +657,17 @@[m [mnamespace CoDesignStudy.Cad.PlugIn[m
 [m
             return contentControl;[m
         }[m
[32m+[m[32m        private void ConversationPanel_Resize(object sender, EventArgs e)[m
[32m+[m[32m        {[m
[32m+[m[32m            // 面板大小改变时，如果在底部则保持在底部[m
[32m+[m[32m            if (isAutoScrollEnabled && IsNearBottom())[m
[32m+[m[32m            {[m
[32m+[m[32m                Task.Delay(100).ContinueWith(_ =>[m
[32m+[m[32m                {[m
[32m+[m[32m                    this.Invoke(new Action(() => SmartAutoScroll()));[m
[32m+[m[32m                });[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
         // 非流式输出[m
         public Task<Control> AppendMessageSync(string sender, string message)[m
         {[m
[36m@@ -291,7 +693,7 @@[m [mnamespace CoDesignStudy.Cad.PlugIn[m
 <html><head>[m
 <script src='https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js'></script>[m
 </head>[m
[31m-<body style='font-family:微软雅黑;font-size:10pt;background-color:#FFFFFF;margin:0;padding:0;'>[m
[32m+[m[32m<body style='font-family:微软雅黑;font-size:{htmlsize};background-color:#FFFFFF;margin:0;padding:0;'>[m
 {html}[m
 </body></html>";[m
 [m
[36m@@ -304,7 +706,7 @@[m [mnamespace CoDesignStudy.Cad.PlugIn[m
                 {[m
                     Text = message,[m
                     AutoSize = true,[m
[31m-                    Font = new System.Drawing.Font("微软雅黑", 10),[m
[32m+[m[32m                    Font = new System.Drawing.Font("微软雅黑", fontsize),[m
                     MaximumSize = new Size(conversationPanel.Width - 150, 0),[m
                     Padding = new Padding(10),[m
                     BackColor = Color.LightBlue,[m
[36m@@ -370,6 +772,7 @@[m [mnamespace CoDesignStudy.Cad.PlugIn[m
 [m
             return Task.FromResult<Control>(contentControl);[m
         }[m
[32m+[m[32m        #endregion[m
 [m
         // 流式调用[m
         public async Task<string> GetAIResponse(string userMessage, Action<string> updateContent)[m
[36m@@ -387,7 +790,7 @@[m [mnamespace CoDesignStudy.Cad.PlugIn[m
             new ChatRequest.MessagesType[m
             {[m
                 Role = ChatRequest.RoleEnum.System,[m
[31m-                Content = "你的名字是\"电气设计助手\"，是一个电气设计领域的AutoCAD助手，请回答有关电气设计领域的CAD操作的问题或者相关的电气知识"[m
[32m+[m[32m                Content = "你的名字是\"电气设计助手\"，是一个电气设计领域的AutoCAD助手，请回答有关电气设计领域的问题并返回原始的Markdown格式"[m
             },[m
             new ChatRequest.MessagesType[m
             {[m
[36m@@ -470,23 +873,6 @@[m [mnamespace CoDesignStudy.Cad.PlugIn[m
         {[m
             conversationPanel.Controls.Clear();[m